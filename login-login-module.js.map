{"version":3,"sources":["webpack:///./src/app/layout/login/login-routing.module.ts","webpack:///./src/app/layout/login/login.component.css","webpack:///./src/app/layout/login/login.component.html","webpack:///./src/app/layout/login/login.component.ts","webpack:///./src/app/layout/login/login.module.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {LoginComponent} from './login.component'\nconst routes: Routes = [\n  {path:'',component:LoginComponent}\n];\n\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","module.exports = \"\"","module.exports = \"\\t<!-- Login start -->\\n  <div class=\\\"login-bg\\\">\\n\\t\\t<img src=\\\"https://altmessenger.peoplestrong.com/CandidatePortal/images/bg_login_red.jpg\\\" alt=\\\"background image\\\"/>\\n\\t</div>\\n    <div class=\\\"login-page\\\">\\n    \\t<div class=\\\"section-login-inner\\\">\\n    \\t\\t<div class=\\\"section-login\\\">\\n        \\t<!-- Login Details-->\\n            <div class=\\\"login-details login-block\\\">\\n                <div class=\\\"section-logo client-no-logo\\\">\\n                    <div class=\\\"logo-ps\\\"><img src=\\\"https://altmessenger.peoplestrong.com/CandidatePortal/images/svg/PeopleStrong.svg\\\" alt=\\\"PeopleStrong\\\" /></div>\\n                 </div>\\n                 <div  class=\\\"section-logo\\\"  style=\\\"display:none;\\\">\\n                     <div class=\\\"logo-ps\\\"><img src=\\\"https://altmessenger.peoplestrong.com/CandidatePortal/images/svg/alt_recruit.svg\\\" alt=\\\"Alt recruit\\\" /></div>\\n                     <div class=\\\"logo-client\\\"><img src=\\\"https://altmessenger.peoplestrong.com/CandidatePortal/images/client_logo.png\\\" alt=\\\"client logo\\\"/></div>\\n                 </div>   \\n                <div class=\\\"social-block social-icons-lg\\\">\\n                   <a  (click)=\\\"socialSignIn('facebook')\\\" class=\\\"icon-smd fb-icon\\\">facebook</a> \\n                   <a href=\\\"#\\\" target=\\\"_blank\\\" (click)=\\\"socialSignIn('google')\\\" class=\\\"icon-smd gp-icon\\\">Google Plus</a> \\n                   <a href=\\\"#\\\" target=\\\"_blank\\\" (click)=\\\"socialSignIn('linkedIn')\\\" class=\\\"icon-smd li-icon\\\">linked in</a> \\n                   <a href=\\\"#\\\" target=\\\"_blank\\\" class=\\\"icon-smd tw-icon\\\">Twitter</a> \\n               </div>\\n               <span class=\\\"or-text\\\">or</span>\\n                <div class=\\\"login-form\\\">\\n                    <form role=\\\"form\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onLoggedin()\\\" novalidate>\\n                        <div class=\\\"form-flied\\\">\\n                            <label for=\\\"userName\\\" class=\\\"sr-only\\\">user name</label>\\n                            <input id=\\\"userName\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"username\\\" placeholder=\\\"Enter your email id\\\" [pattern]=\\\"emailPattern\\\" required />   \\n                            <div *ngIf=\\\"loginForm.controls['username'].invalid && (loginForm.controls['username'].dirty || loginForm.controls['username'].touched)\\\" class=\\\"is-invalid\\\">\\n                              <span class=\\\"error\\\" *ngIf=\\\"loginForm.controls['username'].errors.required\\\">\\n                              Email is required.\\n                              </span>\\n                            <span class=\\\"error\\\" *ngIf=\\\"loginForm.controls['username'].errors.pattern && loginForm.controls['username'].touched\\\"> \\n                               Email not valid.\\n                            </span>\\t\\n                          </div>         \\n                        </div>\\n                        <div class=\\\"form-flied margin-none\\\">\\n                            <label for=\\\"password\\\" class=\\\"sr-only\\\">password</label>\\n                            <input id=\\\"password\\\"  formControlName=\\\"password\\\"  type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\"  [pattern]=\\\"passwordPattern\\\" required/>\\n                            <div *ngIf=\\\"loginForm.controls['password'].invalid && (loginForm.controls['password'].dirty || loginForm.controls['password'].touched)\\\" class=\\\"is-invalid\\\">\\n                              <span class=\\\"error\\\" *ngIf=\\\"loginForm.controls['password'].errors.required\\\">\\n                              Password is required.\\n                              </span>\\n                            <span class=\\\"error\\\" *ngIf=\\\"loginForm.controls['password'].errors.pattern && loginForm.controls['password'].touched\\\"> \\n                              password not valid.\\n                            </span>\\t\\n                           \\n                          </div>\\n                        </div>\\n                        <div class=\\\"form-flied remember-row clearfix\\\">\\n                            <div class=\\\"check-box checkbox remember-text\\\">\\n                                <input id=\\\"jobboards\\\" type=\\\"checkbox\\\" class=\\\"styled\\\" >\\n                                <label for=\\\"jobboards\\\">Remember me</label>\\n                            </div>\\n                            <a [routerLink]=\\\"['/forgotpassword']\\\" class=\\\"link forgot-click\\\" title=\\\"Forgot your password?\\\">Forgot your password?</a>\\n                        </div>\\n                        <div class=\\\"form-button\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"loginForm.invalid\\\">Sign in</button>\\n                        </div>\\n                        <div class=\\\"login-account\\\">\\n                            <span class=\\\"have-text\\\">Donâ€™t have an account?</span>\\n                            <a [routerLink]=\\\"['/createaccount']\\\" class=\\\"link sign-up-click\\\" title=\\\"Sign up\\\">Sign up</a>\\n                        </div>\\n                    </form>\\n                </div>\\n           </div>\\n            <!-- \\\\\\\\ End Login Details-->\\n           </div>\\n        </div>\\n        <div class=\\\"login-section-footer\\\">\\n            <div class=\\\"login-footer-logo\\\"><img src=\\\"https://altmessenger.peoplestrong.com/CandidatePortal/images/svg/people_strongalt_white.svg\\\" alt=\\\"alt logo\\\"></div>\\n            <div class=\\\"copy-right\\\">&copy; 2018 PeopleStrong</div>\\n        </div>\\n    </div> \"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router,NavigationEnd} from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  AuthService,\n  FacebookLoginProvider,\n  GoogleLoginProvider,\n  LinkedinLoginProvider\n} from 'angular-6-social-login';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  emailPattern:any;\n  passwordPattern:any;\n  isDisabled = true;\n  constructor(private formBuilder: FormBuilder,public router: Router,private socialAuthService: AuthService) { }\n\n  ngOnInit() {\n    \n    this.passwordPattern = \"^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$\"\n     this.emailPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\";\n      this.loginForm = this.formBuilder.group({\n        username: ['', Validators.required,Validators.pattern(this.emailPattern)],\n        password: ['', Validators.required]\n    });\n\n  }\n\n      // convenience getter for easy access to form fields\n      get f() { return this.loginForm.controls; }\n\n    public socialSignIn(socialPlatform : string) {\n        let socialPlatformProvider;\n        if(socialPlatform == \"facebook\"){\n          socialPlatformProvider = FacebookLoginProvider.PROVIDER_ID;\n        }else if(socialPlatform == \"google\"){\n          socialPlatformProvider = GoogleLoginProvider.PROVIDER_ID;\n        } else if(socialPlatform == \"linkedIn\"){\n            socialPlatformProvider = LinkedinLoginProvider.PROVIDER_ID;\n          } \n        this.socialAuthService.signIn(socialPlatformProvider).then(\n          (userData) => {\n            console.log(socialPlatform+\" sign in data : \" , userData);\n            // Now sign-in with userData\n            // ...\n                \n          }\n        );\n      }\n      \n  onLoggedin() {\n    console.log(this.loginForm);\n\n    if(this.loginForm.value.username == \"sonu.jjbytes@gmail.com\" && this.loginForm.value.password == \"123456\"){\n      alert(\"welcome\")\n      this.router.navigateByUrl(\"/dashboard\");\n    }\n     localStorage.setItem('isLoggedin', 'true');\n }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\nimport { FormsModule,ReactiveFormsModule }    from '@angular/forms';\n@NgModule({\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    FormsModule,ReactiveFormsModule \n  ],\n  declarations: [LoginComponent]\n})\nexport class LoginModule { }\n"],"sourceRoot":""}