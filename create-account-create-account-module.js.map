{"version":3,"sources":["webpack:///./src/app/layout/create-account/create-account-routing.module.ts","webpack:///./src/app/layout/create-account/create-account.component.css","webpack:///./src/app/layout/create-account/create-account.component.html","webpack:///./src/app/layout/create-account/create-account.component.ts","webpack:///./src/app/layout/create-account/create-account.module.ts"],"names":[],"mappings":"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","file":"create-account-create-account-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport{CreateAccountComponent} from './create-account.component'\nconst routes: Routes = [\n  {path:'',component:CreateAccountComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CreateAccountRoutingModule { }\n","module.exports = \"\"","module.exports = \"<!-- Login start -->\\n<div class=\\\"login-bg\\\">\\n  <img src=\\\"images/bg_login_red.jpg\\\" alt=\\\"background image\\\"/>\\n</div>\\n  <div class=\\\"login-page\\\">\\n    <div class=\\\"section-login-inner\\\">\\n      <div class=\\\"section-login\\\">\\n        <!-- Login Details-->\\n          <div class=\\\"login-details login-block\\\" *ngIf=\\\"IsSignUP\\\">\\n              <div class=\\\"section-logo client-no-logo\\\">\\n                  <div class=\\\"logo-ps\\\"><img src=\\\"images/svg/PeopleStrong.svg\\\" alt=\\\"PeopleStrong\\\" /></div>\\n               </div>\\n               <div  class=\\\"section-logo\\\"  style=\\\"display:none;\\\">\\n                   <div class=\\\"logo-ps\\\"><img src=\\\"images/svg/alt_recruit.svg\\\" alt=\\\"Alt recruit\\\" /></div>\\n                   <div class=\\\"logo-client\\\"><img src=\\\"images/client_logo.png\\\" alt=\\\"client logo\\\"/></div>\\n               </div>   \\n               <div class=\\\"social-block social-icons-lg\\\">\\n                    <a  (click)=\\\"socialSignIn('facebook')\\\" class=\\\"icon-smd fb-icon\\\">facebook</a> \\n                    <a href=\\\"#\\\" target=\\\"_blank\\\" (click)=\\\"socialSignIn('google')\\\" class=\\\"icon-smd gp-icon\\\">Google Plus</a> \\n                    <a href=\\\"#\\\" target=\\\"_blank\\\" (click)=\\\"socialSignIn('linkedIn')\\\" class=\\\"icon-smd li-icon\\\">linked in</a> \\n                    <a href=\\\"#\\\" target=\\\"_blank\\\" class=\\\"icon-smd tw-icon\\\">Twitter</a> \\n                </div>\\n             <span class=\\\"or-text\\\">or</span>\\n              <div class=\\\"login-form\\\">\\n                  <form [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"onSignUp()\\\" novalidate>\\n                      <div class=\\\"form-flied\\\">\\n                          <label for=\\\"userName\\\" class=\\\"sr-only\\\">user name</label>\\n                          <input id=\\\"userName\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\"  [pattern]=\\\"emailPattern\\\" required placeholder=\\\"Enter your email id\\\" />   \\n                          <div *ngIf=\\\"userForm.controls['email'].invalid && (userForm.controls['email'].dirty || userForm.controls['email'].touched)\\\" class=\\\"is-invalid\\\">\\n                                <span  class=\\\"error\\\"  *ngIf=\\\"userForm.controls['email'].errors.required\\\">\\n                                Email is required.\\n                                </span>\\n                              <span  class=\\\"error\\\"  *ngIf=\\\"userForm.controls['email'].errors.pattern && userForm.controls['email'].touched\\\"> \\n                                 Email not valid.\\n                              </span>\\t\\n                            </div>         \\n                      </div>\\n                      <div class=\\\"form-flied\\\">\\n                          <label for=\\\"number\\\" class=\\\"sr-only\\\">number</label>\\n                          <input id=\\\"number\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"mobileNo\\\"  [pattern]=\\\"mobilePattern\\\"  placeholder=\\\"Enter your mobile number\\\" required/>\\n                          <div *ngIf=\\\"userForm.controls['mobileNo'].invalid && (userForm.controls['mobileNo'].dirty || userForm.controls['mobileNo'].touched)\\\" class=\\\"is-invalid\\\">\\n                                <span  class=\\\"error\\\"  *ngIf=\\\"userForm.controls['mobileNo'].errors.required\\\">\\n                                Mobile Number is required.\\n                                </span>\\n                              <span  class=\\\"error\\\"  *ngIf=\\\"userForm.controls['mobileNo'].errors.pattern && userForm.controls['mobileNo'].touched\\\"> \\n                                    Mobile Number  not valid.\\n                              </span>\\t\\n                            </div> \\n                      </div>\\n                      <div class=\\\"form-flied\\\">\\n                          <label for=\\\"password\\\" class=\\\"sr-only\\\">password</label>\\n                          <input id=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" [pattern]=\\\"passwordPattern\\\"  placeholder=\\\"Password\\\" required/>\\n                          <div *ngIf=\\\"userForm.controls['password'].invalid && (userForm.controls['password'].dirty || userForm.controls['password'].touched)\\\" class=\\\"is-invalid\\\">\\n                                <span  class=\\\"error\\\"  *ngIf=\\\"userForm.controls['password'].errors.required\\\">\\n                                password is required.\\n                                </span>\\n                                <span class=\\\"error\\\" *ngIf=\\\"userForm.controls['password'].errors.pattern && userForm.controls['password'].touched\\\"> \\n                                        password not valid.\\n                                 </span>\\t\\n                                \\n                            </div>\\n                      </div>\\n                      <div class=\\\"form-flied\\\">\\n                          <label for=\\\"confirmPassword\\\" class=\\\"sr-only\\\">confirm password</label>\\n                          <input id=\\\"confirmPassword\\\" type=\\\"password\\\" class=\\\"form-control\\\"  formControlName=\\\"confirmPassword\\\" placeholder=\\\"Confirm Password\\\" required/>\\n                          <div *ngIf=\\\"userForm.controls['confirmPassword'].invalid && (userForm.controls['confirmPassword'].dirty || userForm.controls['confirmPassword'].touched)\\\" class=\\\"is-invalid\\\">\\n                                <span  class=\\\"error\\\"  *ngIf=\\\"userForm.controls['confirmPassword'].errors.required\\\">\\n                               confirm password is required.\\n                                </span>\\n                              <span class=\\\"error\\\" *ngIf=\\\"userForm.controls['password'].value !== userForm.controls['confirmPassword'].value && userForm.controls['confirmPassword'].touched\\\">\\n                                    confirm password is not matched with password.\\n                              </span>\\n                                \\n                            </div>\\n                      </div>\\n                      <div class=\\\"form-button\\\">\\n                            <button class=\\\"btn btn-default\\\"  [disabled]=\\\"!userForm.valid\\\">Sign up</button>\\n                        \\n                      </div>                        \\n                  </form>\\n              </div>\\n         </div>\\n          <!-- \\\\\\\\ End Login Details-->\\n          <!-- Sign Up-->\\n          <div class=\\\"login-details login-block block-virify\\\" *ngIf=\\\"IsVerify\\\">\\n              <div class=\\\"section-logo client-no-logo\\\">\\n                  <div class=\\\"logo-ps\\\"><img src=\\\"images/svg/PeopleStrong.svg\\\" alt=\\\"PeopleStrong\\\" /></div>\\n               </div>\\n               <div  class=\\\"section-logo\\\"  style=\\\"display:none;\\\">\\n                   <div class=\\\"logo-ps\\\"><img src=\\\"images/svg/alt_recruit.svg\\\" alt=\\\"Alt recruit\\\" /></div>\\n                   <div class=\\\"logo-client\\\"><img src=\\\"images/client_logo.png\\\" alt=\\\"client logo\\\"/></div>\\n               </div>   \\n              \\n             <span class=\\\"or-text\\\">verify your details</span>\\n              <div class=\\\"login-form\\\">\\n                  <form action=\\\"method\\\">\\n                      <div class=\\\"form-flied\\\">\\n                          <label for=\\\"userName\\\" class=\\\"sr-only\\\">user name</label>\\n                          <input id=\\\"userName\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter your email verification URL\\\" />            \\n                      </div>\\n                      <div class=\\\"form-flied\\\">\\n                          <label for=\\\"password\\\" class=\\\"sr-only\\\">number</label>\\n                          <input id=\\\"number\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter the OTP received on your mobile number\\\"/>\\n                      </div>\\n             \\n                      <div class=\\\"form-button\\\">\\n\\n                          <a href=\\\"index.html\\\" title=\\\"log in\\\" class=\\\"btn btn-default forgot-click\\\" (click)=\\\"verifyAccount($event);false\\\">Verify</a>\\n                      </div>                        \\n                  </form>\\n              </div>\\n         </div>    \\n          <!-- \\\\\\\\ End Sign Up-->\\n\\n   \\n      </div>\\n      </div>\\n      <div class=\\\"login-section-footer\\\">\\n          <div class=\\\"login-footer-logo\\\"><img src=\\\"images/svg/people_strongalt_white.svg\\\" alt=\\\"alt logo\\\"></div>\\n          <div class=\\\"copy-right\\\">&copy; 2018 PeopleStrong</div>\\n      </div>\\n  </div> \\n  <!-- \\\\\\\\ End Login start -->  \"","import { Component, OnInit,EventEmitter } from '@angular/core';\nimport {ActivatedRoute, Router,NavigationEnd} from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { PasswordValidation } from '../../password.validation';\nimport {\n  AuthService,\n  FacebookLoginProvider,\n  GoogleLoginProvider,\n  LinkedinLoginProvider\n} from 'angular-6-social-login';\n@Component({\n  selector: 'app-create-account',\n  templateUrl: './create-account.component.html',\n  styleUrls: ['./create-account.component.css']\n})\nexport class CreateAccountComponent implements OnInit {\n  IsSignUP:boolean = true;\n  IsVerify:boolean = false;\n  userForm:FormGroup;\n  emailPattern:any;\n  passwordPattern:any;\n  emailMobilePattern:any;\n  mobilePattern:any;\n  constructor(private formBuilder: FormBuilder,private router : Router,private socialAuthService: AuthService) { }\n\n  ngOnInit() {\n    this.passwordPattern = \"^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$\"\n    this.emailPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\";\n    \n    this.mobilePattern = \"[1-9]{1}[0-9]{9}\"\n    this.userForm = this.formBuilder.group({\n    \n      email: [null, Validators.required,Validators.pattern(this.emailPattern)],\n      mobileNo: [null, Validators.required,Validators.pattern(this.mobilePattern)],\n      password: [null, Validators.required],\n      confirmPassword: [null, Validators.required]},{\n        validator: PasswordValidation.MatchPassword // your validation method\n      });\n    \n  }\n\n      // convenience getter for easy access to form fields\n      get f() { return this.userForm.controls; }\n\n      public socialSignIn(socialPlatform : string) {\n        let socialPlatformProvider;\n        if(socialPlatform == \"facebook\"){\n          socialPlatformProvider = FacebookLoginProvider.PROVIDER_ID;\n        }else if(socialPlatform == \"google\"){\n          socialPlatformProvider = GoogleLoginProvider.PROVIDER_ID;\n        } else if(socialPlatform == \"linkedIn\"){\n            socialPlatformProvider = LinkedinLoginProvider.PROVIDER_ID;\n          } \n        this.socialAuthService.signIn(socialPlatformProvider).then(\n          (userData) => {\n            console.log(socialPlatform+\" sign in data : \" , userData);\n            // Now sign-in with userData\n            // ...\n                \n          }\n        );\n      }\n      \n      onSignUp(){\n      \n       console.log(this.userForm.valid);\n       \n      // if(this.userForm.value.email !== '' && this.userForm.value.password !== '' && this.userForm.value.cpassword !== ''){\n         alert(\"Register Successfully\")\n         this.IsSignUP = false;\n         this.IsVerify = true;\n     //  }\n  }\n  verifyAccount(){\n    this.router.navigate(['/login']);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CreateAccountRoutingModule } from './create-account-routing.module';\nimport { CreateAccountComponent } from './create-account.component';\nimport { FormsModule,ReactiveFormsModule }    from '@angular/forms';\n@NgModule({\n  imports: [\n    CommonModule,\n    CreateAccountRoutingModule,\n    FormsModule,ReactiveFormsModule \n  ],\n  declarations: [CreateAccountComponent]\n})\nexport class CreateAccountModule { }\n"],"sourceRoot":""}