{"version":3,"sources":["webpack:///./src/app/layout/forgot-password/forgot-password-routing.module.ts","webpack:///./src/app/layout/forgot-password/forgot-password.component.css","webpack:///./src/app/layout/forgot-password/forgot-password.component.html","webpack:///./src/app/layout/forgot-password/forgot-password.component.ts","webpack:///./src/app/layout/forgot-password/forgot-password.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACc;AACW;AAClE,IAAM,MAAM,GAAW;IACrB;QACA,IAAI,EAAC,EAAE,EAAC,SAAS,EAAC,kFAAuB;KACxC;CACF,CAAC;AAMF;IAAA;IAA2C,CAAC;IAA/B,2BAA2B;QAJvC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,2BAA2B,CAAI;IAAD,kCAAC;CAAA;AAAJ;;;;;;;;;;;;ACbxC,mB;;;;;;;;;;;ACAA,mtBAAmtB,2rFAA2rF,mlJAAmlJ,sD;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAl6P;AACM;AACD;AACL;AAM/D;IAOE,iCAAoB,MAAa,EAAU,WAAwB;QAA/C,WAAM,GAAN,MAAM,CAAO;QAAU,gBAAW,GAAX,WAAW,CAAa;QANnE,mBAAc,GAAW,KAAK,CAAC;QAC/B,mBAAc,GAAW,IAAI,CAAC;IAK0C,CAAC;IAEzE,0CAAQ,GAAR;QACE,IAAI,CAAC,kBAAkB,GAAG,6EAA6E,CAAC;QACxG,IAAI,CAAC,eAAe,GAAG,wDAAwD;QAC/E,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,YAAY,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzC,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,eAAe,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC/C,EAAC;YACA,SAAS,EAAE,uEAAkB,CAAC,aAAa,CAAC,yBAAyB;SACtE,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,WAAW,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,EAAC,EAAC,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SAEtF,CAAC,CAAC;IAEH,CAAC;IAEH,sBAAI,sCAAC;QADL,oDAAoD;aACpD,cAAU,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAEjE,gDAAc,GAAd;QACE,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;IAE9B,CAAC;IAED,+CAAa,GAAb;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;IArCU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAQ2B,sDAAM,EAAuB,0DAAW;OAPxD,uBAAuB,CAsCnC;IAAD,8BAAC;CAAA;AAtCmC;;;;;;;;;;;;;;;;;;;;;;;;;;ACTK;AACM;AAEgC;AACT;AACF;AASpE;IAAA;IAAoC,CAAC;IAAxB,oBAAoB;QARhC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,2FAA2B;gBAC3B,0DAAW,EAAC,kEAAmB;aAChC;YACD,YAAY,EAAE,CAAC,kFAAuB,CAAC;SACxC,CAAC;OACW,oBAAoB,CAAI;IAAD,2BAAC;CAAA;AAAJ","file":"forgot-password-forgot-password-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport{ForgotPasswordComponent} from './forgot-password.component'\nconst routes: Routes = [\n  {\n  path:'',component:ForgotPasswordComponent,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ForgotPasswordRoutingModule { }\n","module.exports = \"\"","module.exports = \"\\t<!-- Login start -->\\n  <div class=\\\"login-bg\\\">\\n\\t\\t<img src=\\\"https://altmessenger.peoplestrong.com/CandidatePortal/images/bg_login_red.jpg\\\" alt=\\\"background image\\\"/>\\n\\t</div>\\n    <div class=\\\"login-page\\\">\\n    \\t<div class=\\\"section-login-inner\\\">\\n    \\t\\t<div class=\\\"section-login\\\">\\n        \\n\\t\\t\\t\\n            <!-- Forgot password-->\\n            <div class=\\\"login-details forgot-password\\\" *ngIf=\\\"forgotPassword\\\">\\n                <div class=\\\"section-logo client-no-logo\\\">\\n                    <div class=\\\"logo-ps\\\"><img src=\\\"images/svg/PeopleStrong.svg\\\" alt=\\\"PeopleStrong\\\"/></div>\\n                 </div>\\n                 <div  class=\\\"section-logo\\\" style=\\\"display:none;\\\">\\n                     <div class=\\\"logo-ps\\\"><img src=\\\"images/svg/alt_recruit.svg\\\" alt=\\\"Alt recruit\\\"></div>\\n                     <div class=\\\"logo-client\\\"><img src=\\\"images/client_logo.png\\\" alt=\\\"client logo\\\"/></div>\\n                 </div>  \\n                 <div class=\\\"forgot-details\\\">\\n                 \\t<h2 class=\\\"title\\\">FORGOT PASSWORD?</h2>\\n                    <ul class=\\\"list-reset\\\">\\n                    \\t<li>Enter your email id or phone number</li>\\n                        <li>Check for a recovery email / SMS</li>\\n                        <li>Click on the Renew Password link to recover your account</li>\\n                    </ul>\\n                 </div> \\n                 <div class=\\\"login-form\\\">\\n                    <form [formGroup]=\\\"verifyForm\\\" (ngSubmit)=\\\"GetNewPassword(verifyForm.value)\\\" novalidate>\\n                        <div class=\\\"form-flied\\\">\\n                            <label for=\\\"Entermobile\\\" class=\\\"sr-only\\\">Enter your email id or mobile number</label>\\n                            <input id=\\\"Entermobile\\\" formControlName=\\\"emailvarify\\\"  type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter your email id or mobile number\\\"  [pattern]=\\\"emailMobilePattern\\\" required/>\\n                            <div *ngIf=\\\"verifyForm.controls['emailvarify'].invalid && (verifyForm.controls['emailvarify'].dirty || verifyForm.controls['emailvarify'].touched)\\\" class=\\\"is-invalid\\\">\\n                                    <span class=\\\"error\\\" *ngIf=\\\"verifyForm.controls['emailvarify'].errors.required\\\">\\n                                    email or mobile is required.\\n                                    </span>\\n                                  <span  class=\\\"error\\\"  *ngIf=\\\"verifyForm.controls['emailvarify'].errors.pattern && verifyForm.controls['emailvarify'].touched\\\"> \\n                                        Email or mobile not valid.\\n                                     </span>\\t\\n                                </div>\\n\\n                        </div>\\n                        <div class=\\\"form-button\\\">\\n                       <button class=\\\"btn btn-default new-pwd\\\" [disabled]=\\\"!verifyForm.valid\\\">GET A NEW PASSWORD</button>\\n                        </div>\\n                    </form>\\n            \\t</div>\\n           </div>\\n           <!-- \\\\\\\\ End Forgot password-->\\n            <!-- Change Password-->\\n            <div class=\\\"login-details change-password\\\" *ngIf=\\\"changePassword\\\">\\n                <div class=\\\"section-logo client-no-logo\\\">\\n                    <div class=\\\"logo-ps\\\"><img src=\\\"images/svg/PeopleStrong.svg\\\" alt=\\\"ps logo\\\"/></div>\\n                 </div>\\n                 <div  class=\\\"section-logo\\\" style=\\\"display:none;\\\">\\n                     <div class=\\\"logo-ps\\\"><img src=\\\"images/svg/alt_recruit.svg\\\" alt=\\\"Alt recruit\\\"></div>\\n                     <div class=\\\"logo-client\\\"><img src=\\\"https://altmessenger.peoplestrong.com/CandidatePortal/images/client_logo.png\\\" alt=\\\"client logo\\\"/></div>\\n                 </div>  \\n                 <h2 class=\\\"title\\\">CHANGE PASSWORD</h2>\\n                 <div class=\\\"login-form\\\">\\n                    <form  [formGroup]=\\\"passForm\\\" (ngSubmit)=\\\"changePass(passForm.value)\\\" novalidate>\\n                        <div class=\\\"form-flied\\\">\\n                            <label for=\\\"CurrentPassword\\\" class=\\\"sr-only\\\">Current Password</label>\\n                            <input id=\\\"CurrentPassword\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"currpassword\\\" placeholder=\\\"Current Password\\\"/>\\n                            <div *ngIf=\\\"passForm.controls['currpassword'].invalid && (passForm.controls['currpassword'].dirty || passForm.controls['currpassword'].touched)\\\" class=\\\"is-invalid\\\">\\n                                <span class=\\\"error\\\" *ngIf=\\\"passForm.controls['currpassword'].errors.required\\\">\\n                                password is required.\\n                                </span>\\n                              \\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-flied\\\">\\n                            <label for=\\\"NewPassword\\\" class=\\\"sr-only\\\">New Password</label>\\n                            <input id=\\\"NewPassword\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" [pattern]=\\\"passwordPattern\\\"  placeholder=\\\"New Password\\\"/>\\n                            <div *ngIf=\\\"passForm.controls['password'].invalid && (passForm.controls['password'].dirty || passForm.controls['password'].touched)\\\"  class=\\\"is-invalid\\\">\\n                                <span class=\\\"error\\\" *ngIf=\\\"passForm.controls['password'].errors.required\\\">\\n                                password is required.\\n                                </span>\\n                              <span class=\\\"error\\\" *ngIf=\\\"passForm.controls['password'].errors.pattern && passForm.controls['password'].touched\\\"> \\n                                password not valid.\\n                              </span>\\t\\n                              \\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-flied\\\">\\n                            <label for=\\\"ConfirmPassword1\\\" class=\\\"sr-only\\\">Confirm Password</label>\\n                            <input id=\\\"ConfirmPassword1\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"confirmPassword\\\" placeholder=\\\"Confirm Password\\\"/>\\n                            <div *ngIf=\\\"passForm.controls['confirmPassword'].invalid && (passForm.controls['confirmPassword'].dirty || passForm.controls['confirmPassword'].touched)\\\" class=\\\"is-invalid\\\">\\n                                <span *ngIf=\\\"passForm.controls['confirmPassword'].errors.required\\\">\\n                               confirm password is required.\\n                                </span>\\n                              <div class=\\\"error\\\" *ngIf=\\\"passForm.controls['password'].value !== passForm.controls['confirmPassword'].value && passForm.controls['confirmPassword'].touched\\\">\\n                                confirm password is not matched with password.\\n                               </div>\\n                              \\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-button\\\">\\n                            <button class=\\\"btn btn-default\\\" (click)=\\\"resetPassword()\\\" [disabled]=\\\"!passForm.valid\\\">RESET PASSWORD</button>\\n                        </div>\\n                    </form>\\n            \\t</div>\\n                <div class=\\\"forgot-details\\\">\\n                \\t<h5>Password Policy:</h5>\\n                    <ul class=\\\"list-reset\\\">\\n                    \\t<li>It must contain atleast 6 characters</li>\\n                        <li>It should not contain spaces</li>\\n                        <li>It should contain atleast one number</li>\\n                        <li>It should contain atleast one special character</li>\\n                    </ul>\\n                </div>\\n           </div>\\n            <!-- \\\\\\\\ End Change password-->\\n        </div>\\n        </div>\\n        <div class=\\\"login-section-footer\\\">\\n            <div class=\\\"login-footer-logo\\\"><img src=\\\"https://altmessenger.peoplestrong.com/CandidatePortal/images/svg/people_strongalt_white.svg\\\" alt=\\\"alt logo\\\"></div>\\n            <div class=\\\"copy-right\\\">&copy; 2018 PeopleStrong</div>\\n        </div>\\n    </div> \"","import { Component, OnInit,EventEmitter } from '@angular/core';\nimport {ActivatedRoute, Router,NavigationEnd} from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { PasswordValidation } from '../../password.validation';\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  changePassword:boolean = false;\n  forgotPassword:boolean = true;\n  passwordPattern:any;\n  emailMobilePattern:any;\n  passForm:FormGroup;\n  verifyForm:FormGroup;\n  constructor(private router:Router, private formBuilder: FormBuilder,) { }\n\n  ngOnInit() {\n    this.emailMobilePattern = \"^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})|([0-9]{10})+$\";\n    this.passwordPattern = \"^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$\"\n    this.passForm = this.formBuilder.group({\n      currpassword: [null, Validators.required],  \n      password: [null, Validators.required],\n      confirmPassword: [null, Validators.required]\n  },{\n    validator: PasswordValidation.MatchPassword // your validation method\n  });\n\n  this.verifyForm = this.formBuilder.group({\n    emailvarify: [null, Validators.required,,Validators.pattern(this.emailMobilePattern)],  \n   \n  });\n\n  }\n// convenience getter for easy access to form fields\nget f() { return this.passForm.controls,this.verifyForm.controls; }\n\n  GetNewPassword(){\n    this.forgotPassword = false;\n     this.changePassword = true;\n   \n  }\n\n  resetPassword(){\n    this.router.navigate(['/login']);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ForgotPasswordRoutingModule } from './forgot-password-routing.module';\nimport { ForgotPasswordComponent } from './forgot-password.component';\nimport { FormsModule,ReactiveFormsModule }    from '@angular/forms';\n@NgModule({\n  imports: [\n    CommonModule,\n    ForgotPasswordRoutingModule,\n    FormsModule,ReactiveFormsModule\n  ],\n  declarations: [ForgotPasswordComponent]\n})\nexport class ForgotPasswordModule { }\n"],"sourceRoot":""}